package dhbk.android.movienanodegree.ui.listmovie.view;

import android.app.LoaderManager;
import android.content.Context;
import android.content.CursorLoader;
import android.content.Loader;
import android.database.Cursor;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.view.View;
import android.widget.RelativeLayout;
import android.widget.TextView;

import javax.inject.Inject;

import butterknife.BindView;
import butterknife.OnClick;
import dhbk.android.movienanodegree.MVPApp;
import dhbk.android.movienanodegree.R;
import dhbk.android.movienanodegree.dagger.listmovie.DaggerListMovieComponent;
import dhbk.android.movienanodegree.dagger.listmovie.ListMoviePresenterModule;
import dhbk.android.movienanodegree.models.DiscoverMovieResponse;
import dhbk.android.movienanodegree.ui.base.BaseActivity;
import dhbk.android.movienanodegree.ui.detailmovie.view.MovieDetailActivity;
import dhbk.android.movienanodegree.ui.listmovie.ListMovieContract;
import dhbk.android.movienanodegree.ui.listmovie.OnFragInteract;
import dhbk.android.movienanodegree.ui.listmovie.presenter.ListMoviePresenter;
import dhbk.android.movienanodegree.util.ActivityUtils;
import dhbk.android.movienanodegree.util.Constant;
import hugo.weaving.DebugLog;

public class ListMovieActivity extends BaseActivity implements LoaderManager.LoaderCallbacks<Cursor>, OnFragInteract {

    @BindView(R.id.drawer_layout)
    DrawerLayout mDrawerLayout;
    @BindView(R.id.framelayout_act_main_nav)
    RelativeLayout mFramelayoutActMainNav;
    @BindView(R.id.textview_act_main_explore)
    TextView mTextviewActMainExplore;
    @BindView(R.id.textview_act_main_favorite)
    TextView mTextviewActMainFavorite;
    private ListMovieViewPagerFragment mView;

    @Inject
    ListMoviePresenter mPresenter;

    @Override
    protected void attachBaseContext(Context newBase) {
        super.attachBaseContext(newBase);
    }

    @Override
    protected void initView() {
        // add fragment
        mView = (ListMovieViewPagerFragment) getSupportFragmentManager().findFragmentById(R.id.framelayout_act_main_content);
        if (mView == null) {
            mView = ListMovieViewPagerFragment.newInstance();
            ActivityUtils.addFragmentToActivity(
                    getSupportFragmentManager(), mView, R.id.framelayout_act_main_content);
        }
    }

    @Override
    protected void injectDependencies() {
        // create the presenter
        DaggerListMovieComponent
                .builder()
                .movieComponent(((MVPApp) getApplicationContext()).getMovieComponent())
                .listMoviePresenterModule(new ListMoviePresenterModule((ListMovieContract.View) mView))
                .build()
                .inject(this);
        // set up loader to load the database
//        getLoaderManager().initLoader(Constant.LOADER_ID, null, this);
    }

    // make sure viewfragment is create
    @Override
    protected void doThingWhenResumeApp() {

    }

    /**
     * Instantiate and return a new Loader for the given ID.
     * called from method initLoader() and restartLoader()
     *
     * @param id   The ID whose loader is to be created.
     * @param args Any arguments supplied by the caller.
     * @return Return a new Loader instance that is ready to start loading.
     */
    @DebugLog
    @Override
    public Loader<Cursor> onCreateLoader(int id, Bundle args) {
        /**
         * CursorLoader: A loader that queries the ContentResolver and returns a Cursor.
         * -> must provide it with content provider uri
         */
        return new CursorLoader(this, mPresenter.getContentUri(), null, null, null, null);
    }



    /**
     * Called when a previously created loader has finished its load.
     *
     * @param loader The Loader that has finished.
     * @param data   The data generated by the Loader.
     */
    @DebugLog
    @Override
    public void onLoadFinished(Loader<Cursor> loader, Cursor data) {
        // update db with cursor data
        mPresenter.updateListWithCursordata(data);
    }

    /**
     * Called when a previously created loader is being reset, and thus
     * making its data unavailable.  The application should at this point
     * remove any references it has to the Loader's data.
     * call from reset(): xóa bỏ tất cả reference để chtr có thể garbage collection
     *
     * @param loader The Loader that is being reset.
     */
    @Override
    public void onLoaderReset(Loader<Cursor> loader) {
        mPresenter.updateListWithCursordata(null);
    }

    /**
     * todo restart the loader to save movie again when call restart loader, get it with bundle of frag, so it can get the correct uri
     */
    @Override
    public void restartLoader() {
        getLoaderManager().restartLoader(Constant.LOADER_ID, null, this);
    }

    @Override
    protected boolean hasUseCustomeFont() {
        return true;
    }

    @Override
    public int getLayout() {
        return R.layout.activity_main;
    }

    @Override
    protected boolean hasToolbar() {
        return false;
    }

    /**
     * 2 open the nav drawer from left to right
     */
    @Override
    public void openNavDrawer() {
        mDrawerLayout.openDrawer(GravityCompat.START);
    }

    @Override
    public void setForceLoad() {
        mView.setForceload();
    }

    @Override
    public void gotoDetailActivity(DiscoverMovieResponse.DiscoverMovie movie) {
        MovieDetailActivity.newIntent(this, movie);
    }

    @OnClick({R.id.textview_act_main_explore, R.id.textview_act_main_favorite})
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.textview_act_main_explore:
                // : 8/11/2016 replace with explore if not have
                Fragment exploreFrag = getSupportFragmentManager().findFragmentById(R.id.framelayout_act_main_content);
                if (!(exploreFrag instanceof ListMovieViewPagerFragment)) {
                    ListMovieViewPagerFragment fragment = ListMovieViewPagerFragment.newInstance();
                    ActivityUtils.replaceFragment(getSupportFragmentManager(), fragment, R.id.framelayout_act_main_content);
                }
                // TODO: 8/11/2016 1 change title
                mDrawerLayout.closeDrawers();
                break;
            case R.id.textview_act_main_favorite:
                // : 8/11/2016 replace with favorite if not have
                Fragment favoriteFrag = getSupportFragmentManager().findFragmentById(R.id.framelayout_act_main_content);
                if (!(favoriteFrag instanceof ListMovieFavoriteFragment)) {
                    ListMovieFavoriteFragment fragment = ListMovieFavoriteFragment.newInstance();
                    ActivityUtils.replaceFragment(getSupportFragmentManager(), fragment, R.id.framelayout_act_main_content);
                }
                // TODO: 8/11/2016 1b change title
                mDrawerLayout.closeDrawers();
                break;
        }
    }
}
